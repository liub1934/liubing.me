import{_ as e,c as s,a as t,o as a}from"./app-DyfPPSu6.js";const n={};function p(r,i){return a(),s("div",null,i[0]||(i[0]=[t(`<h1 id="vite-获取打包自定义参数" tabindex="-1"><a class="header-anchor" href="#vite-获取打包自定义参数"><span>Vite 获取打包自定义参数</span></a></h1><p>虽然 Vite 支持<a href="https://cn.vitejs.dev/guide/env-and-mode.html" target="_blank" rel="noopener noreferrer">环境变量和模式</a>，支持配置各种环境变量及获取，但部分情况我们可能不想讲该配置放到环境变量里面，比如我想运行一个打包分析，生成代码分析报告的命令：<code>npm run report</code>，执行代码打包并生成代码分析报告，不想因为额外一个命令去维护一个单独的环境变量，此时我们就可以使用<code>-- --</code>在打包的时候传递额外的自定义参数。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p><code>package.json</code>中新增<code>report</code>命令，执行 test 环境打包命令，并附带上<code>--report</code>自定义参数。</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  &quot;scripts&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;dev&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;run-p type-check &amp;&amp; vite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;build-test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;run-p type-check &amp;&amp; vite build --mode test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;report&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;run-p type-check &amp;&amp; vite build --mode test -- --report&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>vite.config.ts</code>配置文件中可以通过<code>process.argv</code>来获取所有的参数，其中也包括自定义的参数，可以<code>console.log</code>打印看下。</p><p>可以发现返回的结构是一个数组，其中自定义的参数<code>--report</code>也在其中。</p><figure><img src="https://image.liubing.me/i/2024/03/23/65fe4e5e2dc2b.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>可以判断<code>--report</code>存不存在，如果存在的话可以执行一些额外的操作，比如使用打包分析的插件。</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">argv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;--report&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 执行添加打包分析插件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">analyzer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const h=e(n,[["render",p]]),d=JSON.parse('{"path":"/article/vite/vite-gets-packaging-custom-parameters.html","title":"Vite 获取打包自定义参数","lang":"zh-CN","frontmatter":{"date":"2024-03-23T00:00:00.000Z","category":["Vite"],"tag":["Vite"],"layout":"ArticleLayout","containerClass":"article-container","description":"虽然 Vite 支持环境变量和模式，支持配置各种环境变量及获取，但部分情况我们可能不想讲该配置放到环境变量里面，比如我想运行一个打包分析，生成代码分析报告的命令：npm run report，执行代码打包并生成代码分析报告，不想因为额外一个命令去维护一个单独的环境变量，此时我们就可以使用-- --在打包的时候传递额外的自定义参数。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vite 获取打包自定义参数\\",\\"image\\":[\\"https://image.liubing.me/i/2024/03/23/65fe4e5e2dc2b.png\\"],\\"datePublished\\":\\"2024-03-23T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-23T03:46:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bing🐣\\"}]}"],["meta",{"property":"og:url","content":"https://liubing.me/article/vite/vite-gets-packaging-custom-parameters.html"}],["meta",{"property":"og:site_name","content":"Bing🐣"}],["meta",{"property":"og:title","content":"Vite 获取打包自定义参数"}],["meta",{"property":"og:description","content":"虽然 Vite 支持环境变量和模式，支持配置各种环境变量及获取，但部分情况我们可能不想讲该配置放到环境变量里面，比如我想运行一个打包分析，生成代码分析报告的命令：npm run report，执行代码打包并生成代码分析报告，不想因为额外一个命令去维护一个单独的环境变量，此时我们就可以使用-- --在打包的时候传递额外的自定义参数。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://image.liubing.me/i/2024/03/23/65fe4e5e2dc2b.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-23T03:46:12.000Z"}],["meta",{"property":"article:tag","content":"Vite"}],["meta",{"property":"article:published_time","content":"2024-03-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-23T03:46:12.000Z"}]]},"git":{"createdTime":1711165572000,"updatedTime":1711165572000,"contributors":[{"name":"liub1934","username":"liub1934","email":"liub1934@gmail.com","commits":1,"url":"https://github.com/liub1934"}]},"readingTime":{"minutes":1.14,"words":342},"filePathRelative":"article/vite/vite-gets-packaging-custom-parameters.md","excerpt":"\\n<p>虽然 Vite 支持<a href=\\"https://cn.vitejs.dev/guide/env-and-mode.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">环境变量和模式</a>，支持配置各种环境变量及获取，但部分情况我们可能不想讲该配置放到环境变量里面，比如我想运行一个打包分析，生成代码分析报告的命令：<code>npm run report</code>，执行代码打包并生成代码分析报告，不想因为额外一个命令去维护一个单独的环境变量，此时我们就可以使用<code>-- --</code>在打包的时候传递额外的自定义参数。</p>\\n","autoDesc":true}');export{h as comp,d as data};
