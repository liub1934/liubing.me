import{_ as s,c as e,a,o as t}from"./app-DyfPPSu6.js";const n={};function l(h,i){return t(),e("div",null,i[0]||(i[0]=[a(`<h1 id="解决vue-i18n-te方法不生效" tabindex="-1"><a class="header-anchor" href="#解决vue-i18n-te方法不生效"><span>解决vue i18n te方法不生效</span></a></h1><p>在之前vue2的版本中，经常在<code>axios</code>请求中对于后端返回的部分错误码进行国际化报错处理，使用<code>te(&#39;some.key&#39;)</code>判断key是否在国际化文件中，如果存在就翻译key进行报错，如果不存在则提示后端返回的具体错误信息。新项目使用Vue3 + <a href="https://github.com/intlify/vue-i18n-next" target="_blank" rel="noopener noreferrer">vue-i18n-next</a>，发现在使用<code>te</code>或者<code>$te</code>方法均返回的<code>false</code>，Google搜索一番后找到一个<a href="https://github.com/kazupon/vue-i18n/issues/1521" target="_blank" rel="noopener noreferrer">issue</a>完美解决问题，记录下相关的代码。</p><h2 id="解决代码" tabindex="-1"><a class="header-anchor" href="#解决代码"><span>解决代码</span></a></h2><p>重新复写<code>i18n</code>的<code>te</code>方法，新增国际化key是否存在的判断。</p><blockquote><p><code>has</code>是<code>lodash</code>的方法 &quot;vue-i18n&quot;: &quot;^9.9.0&quot;</p></blockquote><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">i18n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">te</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  key</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> i18n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">te</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">  locale</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> i18n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">te</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> effectiveLocale</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> locale</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> locale</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> locale</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> i18n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">locale</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> messages</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> i18n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">messages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">effectiveLocale</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> has</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">messages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)]))}const p=s(n,[["render",l]]),r=JSON.parse(`{"path":"/article/vue/vue-i18n-te-return-false-not-work.html","title":"解决vue i18n te方法不生效","lang":"zh-CN","frontmatter":{"date":"2024-01-10T00:00:00.000Z","category":["Vue"],"tag":["Vue","i18n"],"layout":"ArticleLayout","containerClass":"article-container","description":"在之前vue2的版本中，经常在axios请求中对于后端返回的部分错误码进行国际化报错处理，使用te('some.key')判断key是否在国际化文件中，如果存在就翻译key进行报错，如果不存在则提示后端返回的具体错误信息。新项目使用Vue3 + vue-i18n-next，发现在使用te或者$te方法均返回的false，Google搜索一番后找到一个i...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"解决vue i18n te方法不生效\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-10T09:23:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Bing🐣\\"}]}"],["meta",{"property":"og:url","content":"https://liubing.me/article/vue/vue-i18n-te-return-false-not-work.html"}],["meta",{"property":"og:site_name","content":"Bing🐣"}],["meta",{"property":"og:title","content":"解决vue i18n te方法不生效"}],["meta",{"property":"og:description","content":"在之前vue2的版本中，经常在axios请求中对于后端返回的部分错误码进行国际化报错处理，使用te('some.key')判断key是否在国际化文件中，如果存在就翻译key进行报错，如果不存在则提示后端返回的具体错误信息。新项目使用Vue3 + vue-i18n-next，发现在使用te或者$te方法均返回的false，Google搜索一番后找到一个i..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-10T09:23:08.000Z"}],["meta",{"property":"article:tag","content":"i18n"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2024-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-10T09:23:08.000Z"}]]},"git":{"createdTime":1704878588000,"updatedTime":1704878588000,"contributors":[{"name":"liub1934","username":"liub1934","email":"liub1934@gmail.com","commits":1,"url":"https://github.com/liub1934"}]},"readingTime":{"minutes":0.75,"words":226},"filePathRelative":"article/vue/vue-i18n-te-return-false-not-work.md","excerpt":"\\n<p>在之前vue2的版本中，经常在<code>axios</code>请求中对于后端返回的部分错误码进行国际化报错处理，使用<code>te('some.key')</code>判断key是否在国际化文件中，如果存在就翻译key进行报错，如果不存在则提示后端返回的具体错误信息。新项目使用Vue3 + <a href=\\"https://github.com/intlify/vue-i18n-next\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue-i18n-next</a>，发现在使用<code>te</code>或者<code>$te</code>方法均返回的<code>false</code>，Google搜索一番后找到一个<a href=\\"https://github.com/kazupon/vue-i18n/issues/1521\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">issue</a>完美解决问题，记录下相关的代码。</p>\\n","autoDesc":true}`);export{p as comp,r as data};
