version: 2
jobs:
  build:
    working_directory: ~/liubing.me
    docker:
      - image: node:18.16.0

    # 步骤定义
    steps:
      # 拉取代码
      - checkout

      # 安装lftp sshpass 工具包
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y lftp sshpass

      # 恢复缓存
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}

      # 安装依赖
      - run:
          name: Install Dependencies
          command: yarn install

      # 保存缓存
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # Build打包
      - run:
          name: Build project
          command: yarn docs:build

      # 将dist打成压缩包
      - run:
          name: Compress dist
          command: |
            cd src/.vuepress
            tar -zcvf dist.tar.gz dist

      # 推送dist压缩包到服务器指定位置
      - run:
          name: Deploy to FTP server
          command: |
            lftp -c "open -u $FTP_USER,$FTP_PASS ftp://$FTP_HOST; set ssl:verify-certificate no; set ftp:ssl-allow no; cd vuepress; put src/.vuepress/dist.tar.gz"

      # 服务器解压压缩包
      - run:
          name: Decompress dist.tar.gz on the server
          command: sshpass -p $SSH_PASS ssh -o StrictHostKeyChecking=no $SSH_USER@$FTP_HOST "cd $SSH_PATH && rm -rf dist && tar -zxvf dist.tar.gz && rm -rf dist.tar.gz"

      # 推送dist至GitHub
      - run:
          name: Deploy to GitHub
          command: |
            cd src/.vuepress/dist
            git config --global init.defaultBranch main
            git init
            git config user.name "liub1934"
            git config user.email "liub1934@gmail.com"
            git add .
            git commit -m "Push Dist"
            git push -f https://$GITHUB_TOKEN@github.com/liub1934/liubing.me.git main:dist

      # 清空Cloudflare缓存
      # - run:
      #     name: Clear Cloudflare Cache
      #     command: |
      #       curl -X POST "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/purge_cache" \
      #         -H "Authorization: Bearer ${CLOUDFLARE_API_KEY}" \
      #         -H "Content-Type: application/json" \
      #         --data '{"files":["https://liubing.me/*.js","https://liubing.me/*.css","https://liubing.me/*.html"]}'

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: main
